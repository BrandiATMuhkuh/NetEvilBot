insgas = read.table("insulgas.txt", header=TRUE)
View(insgas)
View(insgas)
t.test(insgas$Gas ~ insgas$Insulate)
t.test(insgas$Insulate ~ insgas$Gas)
gasmod = lm(Gas ~ Insulate, data=insgas)
gasmod
gasmod = lm(Gas ~ Insulate + Temp, data=insgas)
gasmod
gasmod = lm(Gas ~ Insulate + Temp + Temp:Insulate, data=insgas)
gasmod
plot(gasmod, which=1)
plot(gasmod, which=2)
gasmodreduced = lm(Gas ~ Insulate + Temp, data=insgas)
anova(gasmod, gasmodreduced)
anova(gasmod)
classroom = read.table("classroom_full.csv", header=TRUE)
View(classroom)
classroom <- read.csv("~/Documents/development/NetEvilBot/realNamingGame/analysis/analysis/classroom_full.csv")
View(classroom)
classroom <- read.csv("classroom_full.csv")
View(classroom)
t.test(classroom$centrality ~ classroom$Robots.)
lm(classroom$centrality ~ classroom$Robots.)
lm(factor(classroom$centrality) ~ classroom$Robots.)
lm(classroom$stat_1000_robot_percent ~ classroom$Robots.)
lm(classroom$stat_1000_robot_percent ~ classroom$Robots. + classroom$centrality)
cent = lm(classroom$stat_1000_robot_percent ~ classroom$Robots. + classroom$centrality)
plot(cent)
plot(cent)
cent = lm(classroom$stat_1000_robot_percent ~ classroom$centrality)
plot(cent)
cent = lm(stat_1000_robot_percent ~ Robots. + centrality + Robots.:centrality ,data=classroom)
cent
anova(cent)
p1000 = lm(stat_1000_robot_percent ~ Robots. + centrality + Robots.:centrality ,data=classroom)
anova(p1000)
lm(classroom$centrality ~ classroom$stat_1000_robot_percent)
lm(classroom$centrality ~ factor(classroom$stat_1000_robot_percent))
lm(classroom$stat_1000_robot_percent ~ classroom$centrality)
pc1000 = lm(classroom$stat_1000_robot_percent ~ classroom$centrality)
anova(pc1000)
pc1000
plot(pc1000)
classroom <- read.csv("classroom_full.csv")
p1000 = lm(stat_1000_robot_percent ~ Robots. + centrality + Robots.:centrality ,data=classroom)
pc1000 = lm(classroom$stat_1000_robot_percent ~ classroom$centrality)
anova(p1000)
anova(pc1000)
anova(pc1000, p1000)
p1000
pc1000
anova(pc1000)
p1000
boxplot(classroom$stat_1000_robot_percent ~ classroom$centrality)
boxplot(classroom$stat_1000_robot_percent ~ classroom$centrality  + Robots)
boxplot(classroom$stat_1000_robot_percent ~ classroom$centrality  + classroom$Robots)
boxplot(classroom$stat_1000_robot_percent ~ classroom$centrality  + classroom$Robots  + Robots.:centrality)
boxplot(classroom$stat_1000_robot_percent ~ classroom$centrality  + classroom$Robots  + classroom$Robots.:classroom$centrality)
boxplot(classroom$stat_1000_robot_percent ~ classroom$centrality  + classroom$Robots)
boxplot(classroom$stat_1000_robot_percent ~ classroom$centrality)
boxplot(classroom$Robots. ~ classroom$centrality)
boxplot(classroom$X.step. ~ classroom$centrality)
boxplot(classroom$ticks. ~ classroom$centrality)
boxplot(classroom$stat_gen_robot_percent ~ classroom$centrality)
boxplot(classroom$stat_2500_robot_percent ~ classroom$centrality)
boxplot(classroom$stat_5000_robot_percent ~ classroom$centrality)
boxplot(classroom$stat_5000_robot_percent ~ classroom$centrality + classroom$Robots.)
+ Robots.:centrality
boxplot(classroom$stat_5000_robot_percent ~ classroom$Robots.)
boxplot(classroom$stat_1000_robot_percent ~ classroom$Robots.)
boxplot(classroom$stat_2500_robot_percent ~ classroom$Robots.)
catchSet = subset(classroom, classroom$centrality == "random")
View(classroom)
catchSet = subset(classroom, classroom$centrality == "random" || "closeness-centrality")
catchSet = subset(classroom, classroom$centrality == "closeness-centrality")
View(catchSet)
classroom$centrality
catchSet = subset(classroom, classroom$centrality == '"betweenness-centrality"')
View(catchSet)
catchSet = subset(classroom, centrality == '"betweenness-centrality"')
catchSet = subset(classroom, centrality == '"betweenness-centrality"')
catchSet = subset(classroom, centrality == '"betweenness-centrality"' | centrality == '"betweenness-centrality"')
catchSet = subset(classroom, centrality == '"random"' | centrality == '"betweenness-centrality"')
View(classroom)
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom, centrality == '"random"' | centrality == '"betweenness-centrality"')
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom, centrality == '"closeness-centrality"' | centrality == '"betweenness-centrality"')
View(catchSet)
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom, centrality == '"random"' | centrality == '"closeness-centrality"')
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom, centrality == '"random"' | centrality == '"betweenness-centrality"')
anova(lm(catchSet$stat_1000_robot_percent ~ catchSet$centrality))
catchSet = subset(classroom, centrality == '"random"' | centrality == '"betweenness-centrality"')
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
anova(lm(catchSet$stat_1000_robot_percent ~ catchSet$centrality))
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality + catchSet$Robots.)
anova(lm(catchSet$stat_1000_robot_percent ~ catchSet$centrality + catchSet$Robots.))
anova(lm(classroom$stat_1000_robot_percent ~ classroom$centrality))
lm(classroom$stat_1000_robot_percent ~ classroom$centrality)
sumary(lm(classroom$stat_1000_robot_percent ~ classroom$centrality))
summary(lm(classroom$stat_1000_robot_percent ~ classroom$centrality))
summary(anova(lm(classroom$stat_1000_robot_percent ~ classroom$centrality)))
summary(lm(classroom$stat_1000_robot_percent ~ classroom$centrality))
summary(lm(classroom$stat_1000_robot_percent ~ classroom$centrality  + classroom$Robots.:classroom$centrality))
catchSet = subset(classroom, centrality == '"closeness-centrality"' | centrality == '"betweenness-centrality"')
summary(lm(catchSet$stat_1000_robot_percent ~ catchSet$centrality  + catchSet$Robots.:catchSet$centrality))
catchSet = subset(classroom, centrality == '"closeness-centrality"' | centrality == '"betweenness-centrality"'  | centrality == '"page-rank"')
summary(lm(catchSet$stat_1000_robot_percent ~ catchSet$centrality  + catchSet$Robots.:catchSet$centrality))
summary(lm(catchSet$stat_1000_robot_percent ~ catchSet$centrality))
catchSet = subset(classroom, centrality == '"random"' | centrality == '"betweenness-centrality"')
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
summary(lm(classroom$Robots. ~ classroom$centrality))
summary(anova(lm(classroom$Robots. ~ classroom$centrality)))
summary(lm(classroom$Robots. ~ classroom$centrality))
summary(lm(stat_1000_robot_percent ~ Robots. + centrality ,data=classroom))
summary(anova(lm(stat_1000_robot_percent ~ Robots. + centrality ,data=classroom)))
summary(lm(stat_1000_robot_percent ~ Robots. + centrality ,data=classroom))
catchSet = subset(classroom, centrality == '"closeness-centrality"' | centrality == '"betweenness-centrality"'  | centrality == '"page-rank"')
summary(lm(stat_1000_robot_percent ~ Robots. + centrality ,data=catchSet))
summary(lm(stat_1000_robot_percent ~ centrality + Robots. ,data=catchSet))
summary(lm(stat_1000_robot_percent ~ centrality + factro(Robots.) ,data=catchSet))
summary(lm(stat_1000_robot_percent ~ centrality + Robots. ,data=catchSet))
aov(stat_1000_robot_percent ~ centrality + Robots. centrality:Robots., data=mydataframe)
aov(stat_1000_robot_percent ~ centrality + Robots. centrality:Robots., data=catchSet)
anova(stat_1000_robot_percent ~ centrality + Robots. centrality:Robots., data=catchSet)
anova(stat_1000_robot_percent ~ centrality + Robots. + centrality:Robots., data=catchSet)
avo(stat_1000_robot_percent ~ centrality + Robots. + centrality:Robots., data=catchSet)
aov(stat_1000_robot_percent ~ centrality + Robots. + centrality:Robots., data=catchSet)
aov(stat_1000_robot_percent ~ centrality, data=catchSet)
summary(aov(stat_1000_robot_percent ~ centrality, data=catchSet))
summary(aov(stat_1000_robot_percent ~ centrality  + Robots., data=catchSet))
summary(aov(stat_1000_robot_percent ~ centrality*Robots., data=catchSet))
catchSet = subset(classroom, Robots. == 3 & centrality == '"closeness-centrality"' | centrality == '"betweenness-centrality"'  | centrality == '"page-rank"')
summary(lm(stat_1000_robot_percent ~ centrality + Robots. ,data=catchSet))
catchSet = subset(classroom, Robots. == 3 & (centrality == '"closeness-centrality"' | centrality == '"betweenness-centrality"'  | centrality == '"page-rank"'))
summary(lm(stat_1000_robot_percent ~ centrality + Robots. ,data=catchSet))
catchSet = subset(classroom, (centrality == '"closeness-centrality"' | centrality == '"betweenness-centrality"'  | centrality == '"page-rank"'))
catchSet = subset(classroom, Robots. == 3 & (centrality == '"closeness-centrality"' | centrality == '"betweenness-centrality"'  | centrality == '"page-rank"'))
catchSet = subset(classroom, Robots. == 6 & (centrality == '"closeness-centrality"' | centrality == '"betweenness-centrality"'  | centrality == '"page-rank"'))
summary(lm(stat_1000_robot_percent ~ centrality + Robots. ,data=catchSet))
catchSet = subset(classroom, Robots. == 6 )
summary(lm(stat_1000_robot_percent ~ centrality + Robots. ,data=catchSet))
summary(lm(stat_1000_robot_percent ~ centrality*  Robots. ,data=catchSet))
catchSet = subset(classroom, Robots. ==  & (centrality == '"closeness-centrality"' | centrality == '"betweenness-centrality"'  | centrality == '"page-rank"'))
summary(lm(stat_1000_robot_percent ~ centrality * Robots. ,data=catchSet))
catchSet = subset(classroom, Robots. == 3 & (centrality == '"closeness-centrality"' | centrality == '"betweenness-centrality"'  | centrality == '"page-rank"'))
summary(lm(stat_1000_robot_percent ~ centrality * Robots. ,data=catchSet))
catchSet = subset(classroom,  (centrality == '"closeness-centrality"' | centrality == '"betweenness-centrality"'  | centrality == '"page-rank"'))
summary(lm(stat_1000_robot_percent ~ centrality * Robots. ,data=catchSet))
summary(lm(stat_1000_robot_percent ~ centrality ,data=catchSet))
catchSet = subset(classroom, Robots. == 3 & (centrality == '"closeness-centrality"' | centrality == '"betweenness-centrality"'  | centrality == '"page-rank"'))
summary(lm(stat_1000_robot_percent ~ centrality ,data=catchSet))
catchSet = subset(classroom, Robots. == 6 & (centrality == '"closeness-centrality"' | centrality == '"betweenness-centrality"'  | centrality == '"page-rank"'))
summary(lm(stat_1000_robot_percent ~ centrality ,data=catchSet))
catchSet = subset(classroom, Robots. == 9 & (centrality == '"closeness-centrality"' | centrality == '"betweenness-centrality"'  | centrality == '"page-rank"'))
summary(lm(stat_1000_robot_percent ~ centrality ,data=catchSet))
catchSet = subset(classroom, Robots. == 11 & (centrality == '"closeness-centrality"' | centrality == '"betweenness-centrality"'  | centrality == '"page-rank"'))
summary(lm(stat_1000_robot_percent ~ centrality ,data=catchSet))
catchSet = subset(classroom, Robots. == 26 & (centrality == '"closeness-centrality"' | centrality == '"betweenness-centrality"'  | centrality == '"page-rank"'))
summary(lm(stat_1000_robot_percent ~ centrality ,data=catchSet))
catchSet = subset(classroom, Robots. <= 26 & (centrality == '"closeness-centrality"' | centrality == '"betweenness-centrality"'  | centrality == '"page-rank"'))
summary(lm(stat_1000_robot_percent ~ centrality ,data=catchSet))
summary(lm(stat_1000_robot_percent ~ centrality * Robots. ,data=catchSet))
catchSet = subset(classroom, Robots. <= 100 & (centrality == '"closeness-centrality"' | centrality == '"betweenness-centrality"'  | centrality == '"page-rank"'))
summary(lm(stat_1000_robot_percent ~ centrality * Robots. ,data=catchSet))
catchSet = subset(classroom, (centrality == '"closeness-centrality"' | centrality == '"betweenness-centrality"'  | centrality == '"page-rank"'))
summary(lm(stat_1000_robot_percent ~ centrality * Robots. ,data=catchSet))
summary(lm(stat_1000_robot_percent ~ centrality ,data=catchSet))
catchSet = subset(classroom, Robots. <= 50 & (centrality == '"closeness-centrality"' | centrality == '"betweenness-centrality"'  | centrality == '"page-rank"'))
summary(lm(stat_1000_robot_percent ~ centrality ,data=catchSet))
catchSet = subset(classroom, Robots. <= 30 & (centrality == '"closeness-centrality"' | centrality == '"betweenness-centrality"'  | centrality == '"page-rank"'))
summary(lm(stat_1000_robot_percent ~ centrality ,data=catchSet))
catchSet = subset(classroom, Robots. <= 10 & (centrality == '"closeness-centrality"' | centrality == '"betweenness-centrality"'  | centrality == '"page-rank"'))
summary(lm(stat_1000_robot_percent ~ centrality ,data=catchSet))
catchSet = subset(classroom, Robots. <= 5 & (centrality == '"closeness-centrality"' | centrality == '"betweenness-centrality"'  | centrality == '"page-rank"'))
summary(lm(stat_1000_robot_percent ~ centrality ,data=catchSet))
catchSet = subset(classroom, Robots. <= 3 & (centrality == '"closeness-centrality"' | centrality == '"betweenness-centrality"'  | centrality == '"page-rank"'))
summary(lm(stat_1000_robot_percent ~ centrality ,data=catchSet))
catchSet = subset(classroom, Robots. == 6 & (centrality == '"closeness-centrality"' | centrality == '"betweenness-centrality"'  | centrality == '"page-rank"'))
summary(lm(stat_1000_robot_percent ~ centrality ,data=catchSet))
summary(lm(stat_5000_robot_percent ~ centrality ,data=catchSet))
catchSet = subset(classroom, Robots. == 6 & (centrality == '"random"' | centrality == '"betweenness-centrality"'  | centrality == '"page-rank"'))
summary(lm(stat_5000_robot_percent ~ centrality ,data=catchSet))
closeness-centrality
closeness-centrality
catchSet = subset(classroom, Robots. == 6 & (centrality == '"closeness-centrality"' | centrality == '"betweenness-centrality"'  | centrality == '"page-rank"'))
summary(lm(stat_5000_robot_percent ~ centrality ,data=catchSet))
catchSet = subset(classroom, (centrality == '"closeness-centrality"' | centrality == '"betweenness-centrality"'  | centrality == '"page-rank"'))
summary(lm(stat_5000_robot_percent ~ centrality ,data=catchSet))
summary(classroom)
summary(classroom$stat_1000_robot_percent + classroom$centrality)
summary(classroom$stat_1000_robot_percent)
boxplot(catchSet)
boxplot(catchSet$stat_1000_robot_percent)
boxplot(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
boxplot(classroom$stat_1000_robot_percent ~ classroom$centrality)
boxplot(classroom$stat_1000_robot_percent ~ classroom$centrality*classroom$Robots.)
catchSet = subset(classroom, classroom$Robots. > 0)
boxplot(classroom$stat_1000_robot_percent ~ classroom$centrality*classroom$Robots.)
catchSet = subset(classroom, classroom$Robots. > 0)
boxplot(catchSet$stat_1000_robot_percent ~ catchSet$centrality*catchSet$Robots.)
boxplot(catchSet$stat_1000_robot_percent ~ catchSet$centrality*catchSet$Robots., notch=TRUE)
catchSet = subset(classroom, classroom$Robots. > 0)
boxplot(catchSet$stat_1000_robot_percent ~ catchSet$centrality*catchSet$Robots., notch=TRUE)
boxplot(catchSet$stat_1000_robot_percent ~ catchSet$centrality*catchSet$Robots.)
boxplot(catchSet$stat_1000_robot_percent ~ catchSet$centrality*catchSet$Robots., col=(c("gold","darkgreen")))
boxplot(catchSet$stat_1000_robot_percent ~ catchSet$centrality*catchSet$Robots., col=(c("gold","darkgreen", "blue", "red")))
catchSet = subset(classroom, classroom$Robots. > 50)
boxplot(catchSet$stat_1000_robot_percent ~ catchSet$centrality*catchSet$Robots., col=(c("gold","darkgreen", "blue", "red")))
catchSet = subset(classroom, classroom$Robots. > 20)
boxplot(catchSet$stat_1000_robot_percent ~ catchSet$centrality*catchSet$Robots., col=(c("gold","darkgreen", "blue", "red")))
boxplot(catchSet$stat_1000_robot_percent ~ catchSet$centrality*catchSet$Robots., col=(c("blue","orange", "yellow", "green")))
boxplot(catchSet$stat_1000_robot_percent ~ catchSet$centrality*catchSet$Robots., col=(c("blue","dankorange", "yellow", "green")))
boxplot(catchSet$stat_1000_robot_percent ~ catchSet$centrality*catchSet$Robots., col=(c("blue","orange", "yellow", "green")))
catchSet = subset(classroom, classroom$Robots. > 0)
boxplot(catchSet$stat_1000_robot_percent ~ catchSet$centrality*catchSet$Robots., col=(c("blue","orange", "yellow", "green")))
?boxplot
boxplot(catchSet$stat_1000_robot_percent ~ catchSet$centrality*catchSet$Robots., col=(c("blue","orange", "yellow", "green")), outline = FALSE)
boxplot(catchSet$stat_1000_robot_percent ~ catchSet$centrality*catchSet$Robots., col=(c("blue","yellow", "orange",  "green")), outline = FALSE)
boxplot(catchSet$stat_1000_robot_percent ~ catchSet$centrality*catchSet$Robots., names=(c("blue","yellow", "orange",  "green")), outline = FALSE)
col
catchSet = subset(classroom, classroom$Robots. > 0)
boxplot(catchSet$stat_1000_robot_percent ~ catchSet$centrality*catchSet$Robots., col=(c("blue","yellow", "orange",  "green")), outline = FALSE)
catchSet = subset(classroom, centrality == '"random"' | centrality == '"page-rank"')
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom, centrality == '"random"' | centrality == '"betweenness-centrality"')
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom, centrality == '"random"' | centrality == '"closeness-centrality"')
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom, centrality == '"random"' | centrality == '"page-rank"')
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom, centrality == '"random"' | centrality == '"betweenness-centrality"')
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom, centrality == '"random"' | centrality == '"closeness-centrality"')
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom, centrality == '"random"' | centrality == '"page-rank"')
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom, centrality == '"betweenness-centrality"' | centrality == '"closeness-centrality"')
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom, classroom$Robots. > 0 & (centrality == '"random"' | centrality == '"betweenness-centrality"'))
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom,  classroom$Robots. > 0 & centrality == '"random"' | centrality == '"closeness-centrality"'))
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom,  classroom$Robots. > 0 & (centrality == '"random"' | centrality == '"closeness-centrality"'))
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom, classroom$Robots. > 0 & (centrality == '"random"' | centrality == '"page-rank"'))
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom,  classroom$Robots. > 0 & (centrality == '"betweenness-centrality"' | centrality == '"closeness-centrality"'))
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom, classroom$Robots. > 0 & (centrality == '"betweenness-centrality"' | centrality == '"page-rank"'))
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom,  classroom$Robots. > 0 & (centrality == '"betweenness-centrality"' | centrality == '"closeness-centrality"'))
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom,  classroom$Robots. > 0 & (centrality == '"betweenness-centrality"' | centrality == '"closeness-centrality"'))
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom,  classroom$Robots. > -10 & (centrality == '"betweenness-centrality"' | centrality == '"closeness-centrality"'))
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom, classroom$Robots. > -10 & (centrality == '"random"' | centrality == '"betweenness-centrality"'))
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom,  classroom$Robots. > -10 & (centrality == '"betweenness-centrality"' | centrality == '"closeness-centrality"'))
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom, classroom$Robots. > -10 & (centrality == '"betweenness-centrality"' | centrality == '"page-rank"'))
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom, classroom$Robots. > 1 & (centrality == '"random"' | centrality == '"betweenness-centrality"'))
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom,  classroom$Robots. > 1 & (centrality == '"betweenness-centrality"' | centrality == '"closeness-centrality"'))
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom, classroom$Robots. > 1 & (centrality == '"betweenness-centrality"' | centrality == '"page-rank"'))
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom,  classroom$Robots. > -1 & (centrality == '"betweenness-centrality"' | centrality == '"closeness-centrality"'))
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom,  classroom$Robots. > 1 & (centrality == '"betweenness-centrality"' | centrality == '"closeness-centrality"'))
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom,  classroom$Robots. > 1 & (centrality == '"betweenness-centrality"' | centrality == '"closeness-centrality"'))
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom, classroom$Robots. > 1 & (centrality == '"betweenness-centrality"' | centrality == '"page-rank"'))
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom, classroom$Robots. > 1 & (centrality == '"random"' | centrality == '"betweenness-centrality"'))
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom,  classroom$Robots. > 1 & (centrality == '"random"' | centrality == '"closeness-centrality"'))
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom, classroom$Robots. > 1 & (centrality == '"random"' | centrality == '"page-rank"'))
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom, classroom$Robots. > 1)
boxplot(catchSet$stat_1000_robot_percent ~ catchSet$centrality*catchSet$Robots., col=(c("blue","yellow", "orange",  "green")), outline = FALSE)
off <- read.csv("robotOffset_full.csv")
View(off)
off$stat_1000_robot_percent
lm(off$stat_1000_robot_percent ~ off$Robots. * off$RobotOffset)
lm(off$stat_1000_robot_percent ~ off$Robots. + off$RobotOffset)
lm(off$stat_1000_robot_percent ~ off$RobotOffset)
summary(lm(off$stat_1000_robot_percent ~ off$Robots. + off$RobotOffset))
summary(lm(off$stat_1000_robot_percent ~ off$Robots. * off$RobotOffset))
summary(lm(off$stat_5000_robot_percent ~ off$Robots. * off$RobotOffset))
plot(lm(off$stat_5000_robot_percent ~ off$Robots. * off$RobotOffset))
off$Robots.
offin <- read.csv("robotOffset_full.csv")
off = subset(offin, Robots == 9)
off = subset(offin, Robots. == 9)
summary(lm(off$stat_5000_robot_percent ~ off$Robots. * off$RobotOffset))
summary(lm(off$stat_5000_robot_percent ~ off$RobotOffset))
View(offin)
View(off)
off <- read.csv("robotOffset_full.csv")
off = subset(off, Robots. == 9)
summary(lm(off$stat_5000_robot_percent ~ off$RobotOffset))
off <- read.csv("robotOffset_full.csv")
summary(lm(off$stat_5000_robot_percent ~ off$RobotOffset))
summary(lm(off$stat_5000_robot_percent ~ off$Robots.))
summary(lm(off$stat_5000_robot_percent ~ off$RobotOffset))
summary(anova(lm(off$stat_5000_robot_percent ~ off$RobotOffset)))
(anova(lm(off$stat_5000_robot_percent ~ off$RobotOffset)))
t.test(off$stat_1000_robot_percent ~ off$RobotOffset)
off <- read.csv("robotOffset_full.csv")
off = subset(off, Robots. > 3)
View(off)
off$RobotOffset
off = subset(off, RobotOffset > 49)
off$RobotOffset
t.test(off$stat_1000_robot_percent ~ off$RobotOffset)
lm(off$stat_1000_robot_percent ~ off$RobotOffset)
plot(lm(off$stat_1000_robot_percent ~ off$RobotOffset))
aov
plot(aov(off$stat_1000_robot_percent ~ off$RobotOffset))
aov(off$stat_1000_robot_percent ~ off$RobotOffset)
off <- read.csv("robotOffset_full.csv")
aov(off$stat_1000_robot_percent ~ off$RobotOffset)
fit = aov(off$stat_1000_robot_percent ~ off$RobotOffset)
summary(fit)
summary(anova(lm(off$stat_1000_robot_percent ~ off$RobotOffset)))
anova(lm(off$stat_1000_robot_percent ~ off$RobotOffset))
summary(fit)
?anova
anova(lm(off$stat_2500_robot_percent ~ off$RobotOffset))
a = lm(stat_2500_robot_percent ~ RobotOffset, data=subset(off, Robot. > 3))
a = lm(stat_2500_robot_percent ~ RobotOffset, data=subset(off, Robots. > 3))
off <- read.csv("robotOffset_full.csv")
a = lm(stat_2500_robot_percent ~ RobotOffset, data=subset(off, Robots. > 3))
off <- read.csv("robotOffset_full.csv")
View(off)
a = lm(stat_2500_robot_percent ~ RobotOffset, data=subset(off, Robots. == 3))
a = lm(stat_2500_robot_percent ~ RobotOffset, data=subset(off, Robots. == 3))
b = lm(stat_2500_robot_percent ~ RobotOffset, data=subset(off, Robots. == 6))
c = lm(stat_2500_robot_percent ~ RobotOffset, data=subset(off, Robots. == 9))
d = lm(stat_2500_robot_percent ~ RobotOffset, data=subset(off, Robots. == 11))
anova(a,b,c,d)
subset(off, Robots. == 3)
subset(off, Robots. == 6)
subset(off, Robots. == 9)
subset(off, Robots. == 11)
anova(a,b,c)
summary(anova(a,b,c))
anova(lm(off$stat_2500_robot_percent ~ off$RobotOffset))
anova(lm(off$stat_1000_robot_percent ~ off$RobotOffset))
off <- read.csv("robotOffset_full.csv")
table(off$stat_2500_robot_percent,off$Robots.)
chisq.test(table(off$stat_2500_robot_percent,off$Robots.))
chisq.test(table(off$stat_2500_robot_percent,off$Robots.),simulate.p.value = TRUE)
classroom <- read.csv("classroom_full.csv")
p1000 = lm(stat_1000_robot_percent ~ Robots. + centrality + Robots.:centrality ,data=classroom)
pc1000 = lm(classroom$stat_1000_robot_percent ~ classroom$centrality)
anova(p1000)
anova(pc1000)
catchSet = subset(classroom, classroom$Robots. > 1 & (centrality == '"random"' | centrality == '"betweenness-centrality"'))
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom,  classroom$Robots. > 1 & (centrality == '"random"' | centrality == '"closeness-centrality"'))
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom, classroom$Robots. > 1 & (centrality == '"random"' | centrality == '"page-rank"'))
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom, classroom$Robots. > 1 & (centrality == '"betweenness-centrality"' | centrality == '"page-rank"'))
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
catchSet = subset(classroom, classroom$Robots. > 1 & (centrality == '"betweenness-centrality"' | centrality == '"closeness-centrality"'))
t.test(catchSet$stat_1000_robot_percent ~ catchSet$centrality)
#0\% (only humans), 3\% , 6\% , 9\% , 11\% , 26\% , 44\% , 85\%.
catchSet = subset(classroom, (centrality == '"closeness-centrality"' | centrality == '"betweenness-centrality"'  | centrality == '"page-rank"'))
summary(lm(stat_5000_robot_percent ~ centrality ,data=catchSet))
catchSet = subset(classroom, classroom$Robots. > 1)
boxplot(catchSet$stat_1000_robot_percent ~ catchSet$centrality*catchSet$Robots., col=(c("blue","yellow", "orange",  "green")), outline = FALSE)
#anova centrality  ~ stat_5000_robot_percent
classroom <- read.csv("classroom_full.csv")
plot(classroom$stat_5000_robot_percent ~ classroom$centrality)
mod1 = lm(classroom$stat_5000_robot_percent ~ classroom$centrality)
summary(mod1)
#calc the averages
print("betweenness-centrality")
summary(subset(classroom, classroom$Robots. > 1 & (centrality == '"betweenness-centrality"'))$stat_5000_robot_percent)
sd(subset(classroom, classroom$Robots. > 1 & (centrality == '"betweenness-centrality"'))$stat_5000_robot_percent)
print("closeness-centrality")
summary(subset(classroom, classroom$Robots. > 1 & (centrality == '"closeness-centrality"'))$stat_5000_robot_percent)
sd(subset(classroom, classroom$Robots. > 1 & (centrality == '"closeness-centrality"'))$stat_5000_robot_percent)
print("page-rank")
summary(subset(classroom, classroom$Robots. > 1 & (centrality == '"page-rank"'))$stat_5000_robot_percent)
sd(subset(classroom, classroom$Robots. > 1 & (centrality == '"page-rank"'))$stat_5000_robot_percent)
print("random")
summary(subset(classroom, classroom$Robots. > 1 & (centrality == '"random"'))$stat_5000_robot_percent)
sd(subset(classroom, classroom$Robots. > 1 & (centrality == '"random"'))$stat_5000_robot_percent)
off <- read.csv("robotOffset_full.csv")
off = subset(off, RobotOffset > 49)
(anova(lm(off$stat_5000_robot_percent ~ off$RobotOffset)))
t.test(off$stat_1000_robot_percent ~ off$RobotOffset)
fit = aov(off$stat_1000_robot_percent ~ off$RobotOffset)
summary(fit)
anova(lm(off$stat_1000_robot_percent ~ off$RobotOffset))
a = lm(stat_2500_robot_percent ~ RobotOffset, data=subset(off, Robots. == 3))
b = lm(stat_2500_robot_percent ~ RobotOffset, data=subset(off, Robots. == 6))
c = lm(stat_2500_robot_percent ~ RobotOffset, data=subset(off, Robots. == 9))
anova(a,b,c)
summary(anova(a,b,c))
data70 = subset(subset(off, RobotOffset > 70), Robots. == 9)
data50 = subset(subset(off, RobotOffset > 50), Robots. == 9)
data30 = subset(subset(off, RobotOffset > 30), Robots. == 9)
data10 = subset(subset(off, RobotOffset > 10), Robots. == 9)
lm70 = lm(stat_2500_robot_percent ~ RobotOffset, data70)
lm50 = lm(stat_2500_robot_percent ~ RobotOffset, data50)
lm30 = lm(stat_2500_robot_percent ~ RobotOffset, data30)
lm10 = lm(stat_2500_robot_percent ~ RobotOffset, data10)
anova(lm70,lm50,lm30)
#select only between centrality
data <- read.csv("robotOffset_full.csv")
data = subset(data,  centrality == '"betweenness-centrality"')
#select only data with same mount of robots
data = subset(data, Robots. == 11)
data$RobotOffset = factor(data$RobotOffset)
#compare the dataset on it's robot offset level
model = lm(stat_5000_robot_percent ~ RobotOffset ,data=data)
summary(model)
ano = anova(model)
summary(ano)
